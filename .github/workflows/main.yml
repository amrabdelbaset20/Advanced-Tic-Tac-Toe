name: C++ CI/CD Pipeline

# This workflow runs on any push to the main branch
on:
  push:
    branches: [ main ]

jobs:
  build-test-release:
    # We must run on Windows because windeployqt is a Windows tool
    runs-on: windows-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        # We need to fetch submodules because our project now includes googletest locally
        submodules: 'true'

    # Step 2: Install Qt on the runner
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.0'

    # Step 3: Configure the project with CMake for Release mode
    - name: Configure CMake (Release)
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    # Step 4: Build the project
    - name: Build Project
      run: cmake --build build --config Release

    # Step 5: Run the Google Tests
    - name: Run Google Tests
      run: |
        cd build
        ctest --output-on-failure --build-config Release

    # Step 6: Create a folder for our release package
    - name: Create Release Directory
      run: mkdir release

    # Step 7: Copy the main executable into the release folder
    - name: Copy Executable to Release Folder
      run: copy build\Release\AdvancedTicTacToe.exe release

    # Step 8: Use windeployqt to automatically find and copy Qt DLLs
    # THIS IS THE NEW, MORE ROBUST METHOD.
    - name: Deploy Qt Libraries
      shell: pwsh
      run: |
        # First, add the Qt bin directory to the system PATH for this step.
        # This makes 'windeployqt.exe' available like any other system command.
        $env:PATH += ";${{ env.QT_DIR }}\bin"
        
        # Now, we can simply call the program directly.
        windeployqt.exe --release "release\AdvancedTicTacToe.exe"

    # Step 9: Create a ZIP archive of the release folder
    - name: Create ZIP Archive
      shell: pwsh
      run: |
        Compress-Archive -Path release\* -DestinationPath AdvancedTicTacToe_Windows.zip
        
    # Step 10: Upload the ZIP file as a build artifact
    - name: Upload Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: AdvancedTicTacToe-Windows
        path: AdvancedTicTacToe_Windows.zip
